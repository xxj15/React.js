컴포넌트 : JS 함수가 html 태그들을 리턴하게 만들어준 것

하지만, JS에서는 원래 이를 문법적인 오류로 판단함. 
React.js에서는 순수한 js 문법이 아닌 JSX문법 (확장된 JS 문법)을 사용하므로 적법하다고 판단. 

JSX : JavaScript Extensions 
- 동적으로 특정 변수의 값을 html로 렌더링하도록 설정해줄 수도 있음. 
 
function FOoter(){
  const myName = '안서진';

  return (
    <footer>
     <h1>안녕 내 이름은 {myName}이야></h1>
    </footer>
  )
}

* JSX 주의사항 
1. 중괄호 내부에는 JS 표현식만 넣을 수 있다. (삼항연산자, 값, 변수 이름 등 한 줄로써, 즉 값으로써 평가받을 수 있는 값)
 - 중괄호 안에 if문이나 for 문 등 넣을 수 없음.  

2. 숫자, 문자열, 배열 값만 렌더링된다. (true, undefined, null 등 렌더링X)
 - 객체는 그대로 렌더링 불가, obj.a (점 표기법) 이용해서 문자열이나 숫자값 렌더링하도록 바꿔줘야함. 

3. 모든 태그는 닫혀있어야 한다. 
 - <> 여는 태그 뒤에는 반드시 </> 닫는 태그가!! 
 - <img/> 셀프 클로징 또는 <img></img>

4. 최상위 태그는 반드시 하나여야 한다. 
return(
  <div></div>
  <main></main>
) 이런식으로 하면 에러 발생!! 

최상위 태그로 감쌀만한 마땅한 태그가 없으면 빈태그로 감싸도 됨! 
 - 이 경우 콘솔창에는 최상위 태그가 없는 것으로 나타남! (다른 태그들이 모두 흩뿌려짐)


JSX에서 스타일 설정 방법
 1. 직접 div에 스타일 설정 - 카멜표기법 이용
 <div style={{backgroundColor:"red",}}
   => 가독성 안좋아진다는 단점 있음 
 2. 별도의 css 파일
