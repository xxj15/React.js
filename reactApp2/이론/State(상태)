State : 현재 가지고 있는 형태나 모양 
 - 변화할 수 있는 동적인 값 

React 컴포넌트는 모두 state를 가질 수 있음 . 
state를 갖는 컴포넌트는 state 값에 따라 렌더링되는 UI가 결정된다.

컴포넌트가 다시 렌더링되는것 = Re-Render / Re-rendering이라고 부름



** useState() : 두개의 요소를 담은 배열 반환
[새롭게 생성된 state의 값, state 값 변화시키는 상태 변화 함수]

const state = useState(0); - 인수로 state의 초기값 받음 
 -> console창에 [0, f] 

따라서, useState 함수의 반환값을 변수에 저장하기보다는, 
배열을 받을테니까 비구조화 할당 (=구조 분해 할당) 이용해서 선언하는게 일반적 

const [state, setState] = useState(0)

Q. 왜 state사용?
 - 리렌더링! (변수의 값 수정한다고 렌더링 다시 일어나는게 아님)
 - React에서는 가변적인 값을 화면에 보여주고 싶으면, state를 이용해서 화면에 리렌더링 시켜줘야함.


* 리액트 컴포넌트가 Re-rendering 되는 경우 
1. 자신이 관리하는 state값이 변경되는 경우
2. 자신이 제공받는 props값이 변경되는 경우 
3. 부모 컴포넌트가 리렌더링되는 경우 - 자식 컴포넌트도 리렌더링됨.
 - 의미없이 리렌더링되는 자식 컴포넌트들이 많아지면 성능이 안좋아짐
 - 이를 방지하기 위해 : 관련없는 두개의 state는 서로 다른 컴포넌트로 분리 